- hosts: all
  vars_files:
  - ["vars/default.yml"]
  tasks:
  - name: add nginx ppa
    become: yes
    apt_repository:
      repo: 'ppa:nginx/stable'

  - name: add docker gpg key
    become: yes
    apt_key:
      url: "https://download.docker.com/linux/ubuntu/gpg"

  - name: add docker repo
    become: yes
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable"

  - name: install apt packages
    become: yes
    apt:
      update-cache: yes
      name:
        - curl
        - git
        - nginx
        - unzip
        - python3-pip
        - supervisor
        - docker-ce
      state: present

  - name: install required pip packages for pip module
    command: "pip3 install {{ item }}"
    with_items:
      - setuptools
      - virtualenv

  - name: add {{ linux_user }} user to docker group
    become: yes
    user:
      name: "{{ linux_user }}"
      append: yes
      groups: docker

  - name: initialise docker group
    become: yes
    group:
      name: docker
      state: present

  - name: copy nginx.conf
    become: yes
    template:
      src: nginx.conf.j2
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root

  - name: setup nginx host file dirs
    become: yes
    file:
      path: /etc/nginx/{{ item }}
      state: directory
      owner: root
      group: root
    with_items:
      - sites-available
      - sites-enabled

  - name: ensure default nginx has been deleted
    become: yes
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent

  - name: download and unpack web ui artefact
    unarchive:
      src: "https://github.com/mauriceyap/diorama-web-ui/releases/download/stable/build.zip"
      dest: .
      remote_src: yes

  - name: ensure previous web ui artefact is deleted
    become: yes
    file:
      path: /var/www/web-ui
      state: absent

  - name: move downloaded web ui artefact
    become: yes
    command: mv build /var/www/web-ui

  - name: copy web ui nginx virtual host file
    become: yes
    template:
      src: nginx-hosts/web-ui.j2
      dest: /etc/nginx/sites-available/web-ui
      owner: root
      group: root

  - name: link web ui nginx virtual host file
    become: yes
    file:
      src: /etc/nginx/sites-available/web-ui
      dest: /etc/nginx/sites-enabled/web-ui
      state: link

  - name: restart nginx
    become: yes
    service:
      name: nginx
      state: restarted
      enabled: yes

  - name: stop supervisor
    become: yes
    service:
      name: supervisor
      state: stopped

  - name: kill supervisord process
    become: yes
    command: pkill supervisord
    register: pkill_cmd
    failed_when: pkill_cmd.rc > 1


  - name: unlink supervisord sock file
    become: yes
    file:
      path: /tmp/supervisor.sock
      state: absent

  - name: git clone diorama-server
    git:
      repo: 'https://github.com/mauriceyap/diorama-server.git'
      dest: diorama-server

  - name: initialise python-server virtualenv
    command: python3 -m virtualenv venv
    args:
      chdir: diorama-server

  - name: install diorama-server requirements
    pip:
      requirements: /home/{{ linux_user }}/diorama-server/requirements.txt
      virtualenv: /home/{{ linux_user }}/diorama-server/venv

  - name: git clone diorama-node-logger
    git:
      repo: 'https://github.com/mauriceyap/diorama-node-logger.git'
      dest: diorama-node-logger

  - name: initialise python-node-logger virtualenv
    command: python3 -m virtualenv venv
    args:
      chdir: diorama-node-logger

  - name: install diorama-node-logger requirements
    pip:
      requirements: /home/{{ linux_user }}/diorama-node-logger/requirements.txt
      virtualenv: /home/{{ linux_user }}/diorama-node-logger/venv

  - name: set supervisord config file
    become: yes
    template:
      src: supervisord.conf.j2
      dest: /etc/supervisord.conf

  - name: run supervisord
    command: supervisord

  - name: stop supervisor
    become: yes
    service:
      name: supervisor
      state: stopped

  - name: run supervisord
    command: supervisord
